inputs:
  ENVIRONMENT:
    description: "Name of environment"
    required: true
  AWS_REGION:
    description: "AWS Region to deploy to"
    required: true
  AWS_ROLE_ARN:
    description: "AWS Role ARN that Github will use to connect to AWS"
    required: true
  WHICH_INFRASTRUCTURE:
    description: "Lambda function to apply the deployment strategy to"
    required: true
  BECOME_ACTIVE:
    description: "Previous Lambda function version to update the alias"
    required: true
  SSM_PARAM_INFRASTRUCTURE:
    description: "Lambda function version to update the alias"
    required: true
  SELLERS_DOMAIN_NAME:
    description: "Alias name to be updated with the deployment strategy"
    required: true
  BASE_PATH:
    description: "The weighted traffic amount (in decimal) to be updated with the deployment strategy"
    required: true
  NODE_VERSION:
    description: "Version of NodeJS to use"
runs:
    using: composite
    steps:
    - name: Use Node.js ${{ inputs.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ inputs.NODE_VERSION }}
    - name: Setting up env variable
      shell: bash
      run:  |
        rest_api_id="mi_valor_rest"
        echo "Setting up the env variable"
        echo "export REST_API_ID=$rest_api_id" >> $GITHUB_ENV 
    - name: Update alias and route traffic for ${{ inputs.ENVIRONMENT }}
      shell: bash
      run:  |
        node --version
        echo "Valor 1 de variable $REST_API_ID"
        echo "Valor 2 de variable ${{ env.REST_API_ID }}
        echo "values are region: ${{ inputs.AWS_REGION }}, which_infrastructure: ${{ inputs.WHICH_INFRASTRUCTURE }}, become_active: ${{ inputs.BECOME_ACTIVE }}, SSM_PARAM_INFRASTRUCTURE: ${{ inputs.SSM_PARAM_INFRASTRUCTURE }}, SELLERS_DOMAIN_NAME: ${{ inputs.SELLERS_DOMAIN_NAME }}, BASE_PATH: ${{ inputs.BASE_PATH }}, ENVIRONMENT: ${{ inputs.ENVIRONMENT }}"
        if [[ "${{ inputs.WHICH_INFRASTRUCTURE }}" == "A" ]]; then
            echo "Deploying to A - Bottlers environment..."
            
        elif [[ "${{ inputs.WHICH_INFRASTRUCTURE }}" == "B" ]]; then
            echo "Deploying to B - Sellers environment..."

        else
            echo "Invalid Infrastructure selected"
        fi
